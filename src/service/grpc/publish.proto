syntax = "proto3";
package proto;
option go_package = "bct.com/proxma/net/api/pb";

message GetHostIDRequest {}

message GetHostIDReply {
  string peerID = 1;
}
message GetTokenRequest {
  oneof payload {
    string key =1;
    int32 stype = 2; // 0: client; 1 : miner pool; 3: miner ;4: foggie ;
    bytes signature = 3;
  }
}
message GetTokenReply {
  oneof payload {
    bytes challenge = 1;
    string token = 2;
  }
}
message Header {
  string peerId =1;
  string Id = 2;
  string token = 3;
}
message GetFileRequest {
  string peerId =1;
  string name = 2;
}
message GetRelay {
  bool accept = 1;
}

message GetFileRelay {
  bool accept = 1;
  uint64 size = 2;
}

message StageRequest {
  oneof Option{
    string peerId =1;
    bytes chunk = 2;
  }
}

message MultipartCreateResp{
  string uploadId=1;
  string key=2;
}
message StageResponse {
  string cid = 1;
}

message DeleteObjectRequest{
  repeated string cids=1;
  repeated Upload objects =2;
  string object_type = 3;
}
message DeleteResp {
  repeated string objects=1;
}

message DeleteObjectReq{
  Header header = 1;
  DeleteObjectRequest request = 2;
}
message PutObjectRequest {
  string key = 1;
  string md5 = 2;
  int64 contentLength =3;
  string contentType = 4;
}

message PutObjectReq {
  Header header = 1;
  PutObjectRequest request = 2;
}
message PutObjectOpt{
  oneof Option{
      PutObjectReq req = 1;
      bytes chunk = 2;
  }
}
message PutObjectResp {
  string md5 = 1;
  string cid = 2;
  string lastModified = 3;
  string etag = 4;
}
message CompPart{
  int64 partNumber = 1;
  string etag = 2;
}
message CompletePartUpload {
  repeated CompPart parts = 1;
}
message CompleteMultipartRequest{
  string key = 1;
  string uploadId= 2;
  CompletePartUpload completeUpload=3;
}
message CompleteMultipartReq{
    Header header = 1;
    CompleteMultipartRequest request = 2;
}
message CompleteMultipartResp {
  string  key = 1;
  string etag = 2;
  string  cid = 3;
}
message RangeRequest {
  int64 start = 1;
  int64 length = 2;
}

message GetRequest {
  Header header = 1;
  string cid = 2;
  string key = 3;
  RangeRequest range = 4;
}

message ObjectInfo {
  Object object = 1;
  RangeRequest range = 2;
}
message GetResponse {
  oneof Option{
    ObjectInfo object = 1;
    bytes chunk = 2;
  }

}

message PutObjectResult{
  string md5 = 1;
  string cid = 2;
  string lastModified = 3;
}

message PutObjectPartRequest {
  string md5 = 1;
  string key = 2;
  int64 contentLength =3;
  int64 partId = 4;
  string uploadId = 5;
}
message PutObjectPartReq {
    Header header = 1;
    PutObjectPartRequest  request =2 ;
}
message PutObjectPartOpt{
  oneof Option{
      PutObjectPartReq req = 1;
      bytes chunk = 2;
  }
}
message PutObjectPartResult{
  string etag = 1;
  int64 size = 2;
}
message ListPartsRequest {
  string key = 1;
  string uploadId = 2;
  int64 maxParts = 3;
  int64 partNumberMarker =4;
}
message ListPartsReq {
    Header header = 1;
    ListPartsRequest request = 2;
}
message Part {
  int64 partNumber = 1;
  string etag = 2;
  string lastModified = 3;
  int64 size = 4;
}
message ListPartsResponse {
  string key = 1;
  string uploadId = 2;
  int64 partNumberMarker = 3;
  int64 nextPartNumberMarker=4;
  bool isTruncated =5;
  repeated Part parts = 6;
}
message Upload {
  string  key =1;
  string  uploadId=2;
}

message ListObjectsRequest{
  string prefix =1;
  string delimiter = 2;
  string encoding_type = 3;
  int64  max_keys = 4;
  string start_after = 5;
  string continuation_token=6;
  string version_id_marker = 7;
  string key_marker = 8;
}
message ListObjectsReq{
  Header header = 1;
  ListObjectsRequest request =2 ;
}
message Object{
  string key= 1;
  string etag = 2;
  string lastModified = 3;
  int64  size=4;
  string contentType = 5;
  string cid = 6;
}
message ListObjectsResp{
  repeated string commonPrefixes =1;
  bool isTruncated = 2;
  string prefix = 3;
  int64 maxKeys = 4;
  string nextMarker = 5;
  string continuationToken=6;
  repeated Object content = 7;
}
message ListUploadRequest {
  string delimiter = 1;
  string encodingType = 2;
  int64 maxUploads = 3;
  string keyMarker =4;
  string prefix = 5;
  string uploadIdMarker = 6;
}
message ListUploadReq {
  Header header = 1;
  ListUploadRequest request = 2;
}
message ListMultipartUploadResponse {
  string prefix = 1;
  string keyMarker = 2;
  string UploadIdMarker = 3;
  string NextKeyMarker = 4;
  string NextUploadIdMarker = 5;
  int64 MaxUploads = 6;
  bool isTruncated  = 7;
  repeated Upload uploads = 8;
  string delimiter = 9;
  repeated string commonPrefixes = 10;
}
message GetMerkleRequest{
  string  id = 1;
  string cid = 2;
  int64 idx = 3;
}

message MerkleInfo{
  bytes rootBytes = 1;
  string root = 2;
  string rootDb = 3;
  int32  blocks = 4;
  bytes  normalRoot = 5;
  int64  totalBlocks= 6;

}
message GetMerkleReply{
  MerkleInfo root = 1;
  MerkleInfo cidRoot = 2;
}
message UnpinRequest{
    string cid = 1;
    string stype = 2;
}
message UnPinReq{
  Header header = 1;
  UnpinRequest request = 2;

}
message PinRequest{
    string cid = 1;
    string stype = 2;
    int64 exp=3;
    bool pin = 4;
}
message PinResp{
  string cid = 1;
  string status = 2;
}
message PinReq{
  Header header = 1;
  PinRequest request = 2;

}
message GetMerkleHashRequest{
  string id = 1;
  string cid = 2;
  bytes  nonce = 3;
  int64 idx = 4;
}
message GetMerkleHashResponse{
  string hash = 1;
}
message PeerInfo{
  Header header = 1;
}
message PeerIds {
  repeated string ids = 1;
}
message PeerInfoResp{
  repeated Header  peerInfos= 1;
}
message DeletePeerIdResp{
  string status = 1;
  string  id = 2;
}
message DeletePeerIdsResp {
  repeated DeletePeerIdResp deletes = 1;
}
message MerkleProofResp{
  repeated bytes proofs = 1;
  bytes data=2;
  bytes hash = 3;
  bytes key = 4;
  int64 idx = 5;
  bytes chash = 6;
  bytes ckey = 7;
  int64 cidx = 8;
}
service API {
  rpc Pin(PinReq)returns(PinResp){}
  rpc AddPeerStore(PeerInfo)returns(PeerInfoResp){}
  rpc DelPeerStore(PeerIds)returns(DeletePeerIdResp){}
  rpc ListPeerStoreInfos(PeerIds)returns (PeerInfoResp){}
  rpc GetMerkle(GetMerkleRequest)returns(GetMerkleReply){}
  rpc GetMerkleProof(GetMerkleRequest)returns(MerkleProofResp){}
  rpc GetMerkleHash(GetMerkleHashRequest)returns(GetMerkleHashResponse){}
  rpc GetHostID(GetHostIDRequest) returns(GetHostIDReply){}
  rpc GetToken(stream GetTokenRequest)returns(stream GetTokenReply){}
  rpc Stage(stream StageRequest) returns (StageResponse) {}
  rpc PutObject(stream PutObjectOpt)returns(PutObjectResp){}
  rpc NewMultipartObject(PutObjectReq)returns(MultipartCreateResp){}
  rpc PutObjectPart(stream PutObjectPartOpt)returns(PutObjectPartResult){}
  rpc CompleteMultipart(CompleteMultipartReq)returns(CompleteMultipartResp){}

  rpc ListMultipart(ListUploadReq)returns(ListMultipartUploadResponse){}
  rpc ListObjectParts(ListPartsReq)returns(ListPartsResponse){}
  rpc ListObjects(ListObjectsReq)returns(ListObjectsResp){}
  rpc GetObject(GetRequest) returns (stream GetResponse) {}
  rpc GetObjectInfo(GetRequest) returns (Object) {}
  rpc DeleteObject(DeleteObjectReq)returns(DeleteResp){}
}